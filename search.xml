<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>flask的结构以及模板渲染</title>
      <link href="/2024/06/01/flask%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/06/01/flask%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="flask的结构"><a href="#flask的结构" class="headerlink" title="flask的结构"></a>flask的结构</h1><p>flask的结构主要分为三个部分：</p><ul><li>应用对象：Flask类的实例，它是整个应用的核心对象，负责处理请求、响应、路由、模板等。</li><li>路由：Flask通过路由来匹配用户请求的URL，并调用相应的视图函数进行处理。</li><li>模板：Flask使用模板引擎来渲染HTML页面，模板可以使得HTML页面更加美观、更加动态。</li></ul><p>他妈的上面那些都是vscode的自动生成的，我是觉得从代码的角度来看的话，flask的结构应该是这样的：</p><ul><li>创建flask类的实例</li><li>定义视图函数</li><li>启动应用</li></ul><h2 id="flask类的实例"><a href="#flask类的实例" class="headerlink" title="flask类的实例"></a>flask类的实例</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建flask类的实例</span></span><br><span class="line">app = Flask(__name__)</span><br></pre></td></tr></table></figure><h2 id="定义视图函数"><a href="#定义视图函数" class="headerlink" title="定义视图函数"></a>定义视图函数</h2><p>这里的视图函数就是处理用户请求的函数，其中的return返回值就是响应给用户的结果。而视图函数的定义需要使用装饰器@app.route()来绑定路由。括号里的路由就是用户请求的URL。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义视图函数</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;嘻嘻!&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="启动应用"><a href="#启动应用" class="headerlink" title="启动应用"></a>启动应用</h2><p>这个run里面还可以更改host、port等。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="基本结构代码"><a href="#基本结构代码" class="headerlink" title="基本结构代码"></a>基本结构代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#从flask模块中导入Flask类</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建Flask类的实例</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义视图函数</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;嘻嘻!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.debug模式</span></span><br><span class="line"><span class="comment">#1.1debug模式下，代码发生变化后，会自动重启服务器，并更新代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.修改host和port</span></span><br><span class="line"><span class="comment">#2.1修改host和port，可以指定服务器运行的地址和端口</span></span><br><span class="line"><span class="comment">#2.2就是让其他的设备能够访问我的flask应用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>,host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">9000</span>)</span><br></pre></td></tr></table></figure><hr><hr><h1 id="模板渲染"><a href="#模板渲染" class="headerlink" title="模板渲染"></a>模板渲染</h1><p>flask使用模板引擎来渲染HTML页面，模板可以使得HTML页面更加美观、更加动态。</p><h2 id="什么是模板"><a href="#什么是模板" class="headerlink" title="什么是模板"></a>什么是模板</h2><p>模板就是一个HTML文件，里面可以包含一些变量，当用户请求这个页面时，模板引擎会把变量替换成实际的值，生成一个完整的HTML页面。</p><h2 id="如何使用模板"><a href="#如何使用模板" class="headerlink" title="如何使用模板"></a>如何使用模板</h2><p>flask使用Jinja2模板引擎，Jinja2是Python的一个模板引擎。</p><h3 id="安装Jinja2"><a href="#安装Jinja2" class="headerlink" title="安装Jinja2"></a>安装Jinja2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install Jinja2</span><br></pre></td></tr></table></figure><h3 id="使用模板"><a href="#使用模板" class="headerlink" title="使用模板"></a>使用模板</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#导入render_template函数</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义视图函数</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="comment">#渲染模板</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在templates文件夹下创建一个index.html文件，内容如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="过滤器的使用"><a href="#过滤器的使用" class="headerlink" title="过滤器的使用"></a>过滤器的使用</h3><p>模板引擎支持过滤器，可以对变量进行一些处理，比如格式化时间、格式化数字等。<br>过滤器的定义格式为<code>&#123;&#123;变量名|过滤器名&#125;&#125;</code>，过滤器名可以自定义，也可以使用内置的过滤器。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#导入datetime模块</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="comment">#定义过滤器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">datetimeformat</span>(<span class="params">value, <span class="built_in">format</span>=<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">return</span> value.strftime(<span class="built_in">format</span>)</span><br><span class="line"></span><br><span class="line">app.add_template_filter(datetimeformat,<span class="string">&quot;dformat&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤器的使用</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/filter&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">filter</span>():</span><br><span class="line">    user = User(username=<span class="string">&#x27;zane&#x27;</span>, email=<span class="string">&#x27;zane@example.com&#x27;</span>)</span><br><span class="line">    mytime = datetime.now()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;filter.html&#x27;</span>, user=user, mytime=mytime)</span><br></pre></td></tr></table></figure><p>其中的filter.html内容如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤器的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;user.username&#125;&#125;-&#123;&#123;user.username|length&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;mytime|dformat&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="控制语句的使用"><a href="#控制语句的使用" class="headerlink" title="控制语句的使用"></a>控制语句的使用</h3><p>模板引擎支持控制语句，比如if、for等，可以根据条件渲染不同的内容。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制语句</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/control&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">control</span>():</span><br><span class="line">    age = <span class="number">16</span></span><br><span class="line">    books = [&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;三国演义&#x27;</span>,<span class="string">&#x27;author&#x27;</span>:<span class="string">&#x27;老罗&#x27;</span>&#125;,</span><br><span class="line">             &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;活着&#x27;</span>,<span class="string">&#x27;author&#x27;</span>:<span class="string">&#x27;老余&#x27;</span>&#125;]</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;control.html&#x27;</span>,age=age,books=books)</span><br></pre></td></tr></table></figure><p>其中的control.html内容如下（其中for循环有一点要注意的就是它不像尼玛python那样是可以break的,它他妈是必须要把循环都跑完，还有就是jinja2的语法和python的语法也有一点不一样，有一个if就一定要有endif，for就一定要有endfor）：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>控制语句的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &#123;% if age &gt; 18 %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>妈的老东西<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% elif age == 18 %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>欢迎来到成年人的世界<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>妈的小崽子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for book in books %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>图书名称：&#123;&#123; book.name &#125;&#125;, 作者：&#123;&#123; book.author &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><p>模板继承可以让多个模板共享相同的部分，减少代码重复。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#模板继承</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/base&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;base.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/child1&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">child</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;child1.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/child2&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">child2</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;child2.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/static&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">staticc</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;static.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>其中的base.html内容如下（其中<code>&#123;% block %&#125;和&#123;% endblock %&#125;</code>之间的内容都是由子页面自定义的）：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;% block title %&#125;&#123;% endblock %&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ur</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ur</span>&gt;</span></span><br><span class="line">&#123;% block body %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>这是底部的标签<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中的child1.html内容如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% extends &quot;base.html&quot; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是子页面1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block body %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>子页面1的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>其中的child2.html内容如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% extends &quot;base.html&quot; %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是子页面2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block body %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>子页面2的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h3 id="静态文件"><a href="#静态文件" class="headerlink" title="静态文件"></a>静态文件</h3><p>静态文件就是一些图片、CSS、JS等文件，这些文件可以直接通过url访问，不需要经过模板引擎的处理。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#静态文件</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/static&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">staticc</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;static.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>其中的static.html内容如下（static文件夹下有css、js、images文件夹,在static.html中通过url_for函数来获取静态文件）：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Static Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;css/style.css&#x27;) &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;js/my.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;images/ee7f8305e45a032d431eba27b4ef7a4.jpg&#x27;) &#125;&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中style.css内容如下</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>my.js内容如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;Hello&quot;</span>)</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/29/hello-world/"/>
      <url>/2024/05/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
